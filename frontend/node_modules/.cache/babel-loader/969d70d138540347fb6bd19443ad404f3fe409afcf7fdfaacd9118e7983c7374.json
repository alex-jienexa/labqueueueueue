{"ast":null,"code":"import axios from 'axios';\nconst BASE_API_URL = \"http://localhost:8080\";\nconst BREAKPOINTS = {\n  PING: \"/ping\",\n  LOGIN: \"/login\",\n  REGISTER: \"/register\"\n};\nexport const fetchCurriencies = async () => {\n  await axios.get(BASE_API_URL + BREAKPOINTS.PING).then(r => {\n    console.log(r);\n  });\n};\nexport async function postLogin(data) {\n  await axios.post(BASE_API_URL + BREAKPOINTS.LOGIN, data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    console.log(response);\n  });\n}","map":{"version":3,"names":["axios","BASE_API_URL","BREAKPOINTS","PING","LOGIN","REGISTER","fetchCurriencies","get","then","r","console","log","postLogin","data","post","headers","response"],"sources":["C:/Users/emirs/OneDrive/Документы/ПНКЯПСЖ/labqueueueueue/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_API_URL = \"http://localhost:8080\"; \r\n\r\nconst BREAKPOINTS = {\r\n    PING: \"/ping\",\r\n    LOGIN: \"/login\",\r\n    REGISTER: \"/register\",\r\n}\r\n\r\n\r\nexport const fetchCurriencies = async () => {\r\n    await axios.get(BASE_API_URL + BREAKPOINTS.PING).then(r => {\r\n        console.log(r);\r\n    })\r\n}\r\n\r\nexport async function postLogin(data) {\r\n    await axios.post(BASE_API_URL + BREAKPOINTS.LOGIN, data, {headers: {\r\n        'Content-Type': 'application/json'\r\n    }}).then(response => {console.log(response)});\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,MAAMC,WAAW,GAAG;EAChBC,IAAI,EAAE,OAAO;EACbC,KAAK,EAAE,QAAQ;EACfC,QAAQ,EAAE;AACd,CAAC;AAGD,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMN,KAAK,CAACO,GAAG,CAACN,YAAY,GAAGC,WAAW,CAACC,IAAI,CAAC,CAACK,IAAI,CAACC,CAAC,IAAI;IACvDC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAClB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,eAAeG,SAASA,CAACC,IAAI,EAAE;EAClC,MAAMb,KAAK,CAACc,IAAI,CAACb,YAAY,GAAGC,WAAW,CAACE,KAAK,EAAES,IAAI,EAAE;IAACE,OAAO,EAAE;MAC/D,cAAc,EAAE;IACpB;EAAC,CAAC,CAAC,CAACP,IAAI,CAACQ,QAAQ,IAAI;IAACN,OAAO,CAACC,GAAG,CAACK,QAAQ,CAAC;EAAA,CAAC,CAAC;AACjD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}